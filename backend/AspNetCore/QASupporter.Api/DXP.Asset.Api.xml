<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QASupporter.Api</name>
    </assembly>
    <members>
        <member name="T:QASupporter.Api.Controllers.AppController">
            <summary>
            The AppController.
            </summary>
        </member>
        <member name="M:QASupporter.Api.Controllers.AppController.#ctor(Microsoft.Extensions.Logging.ILogger{QASupporter.Api.Controllers.AppController},Microsoft.Extensions.Options.IOptions{QASupporter.Application.Configuration.ApplicationSettings.ReadmeSettings})">
            <summary>
            The ProgramController constructor.
            </summary>
            <param name="logger">The logger.</param>
            <param name="config">The config.</param>
        </member>
        <member name="M:QASupporter.Api.Controllers.AppController.Readme">
            <summary>
            Returns Readme information.
            </summary>
            <returns>Dynamic.</returns>
        </member>
        <member name="T:QASupporter.Api.Controllers.FileController">
            <summary>
            The FileController.
            </summary>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.#ctor(MediatR.IMediator,Microsoft.Extensions.Options.IOptions{QASupporter.Application.Configuration.ApplicationSettings.AssetSettings},QASupporter.Application.CqrsHandlers.GetResizedFileById.MimeTypeFactory)">
            <summary>
            File Controller.
            </summary>
            <param name="mediator">The mediator.</param>
            <param name="config">The config.</param>
            <param name="mimeTypeFactory">Mime Type Factory.</param>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.GetFileById(System.Int32)">
            <summary>
            Gets File By Id.
            </summary>
            <param name="id">The id.</param>
            <returns>Task{BaseFileDto}.</returns>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.GetMultipleFilesByIds(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Gets multiple files by ids.
            </summary>
            <param name="ids">ids</param>
            <returns>Task{IList{BaseFileDto}}.</returns>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.DeleteFile(System.Int32)">
            <summary>
            Deletes file.
            </summary>
            <param name="id">The id.</param>
            <returns>Task{bool}.</returns>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.DeleteFiles(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Deletes multiple files.
            </summary>
            <param name="ids">The ids.</param>
            <returns>Task{bool}.</returns>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.UploadFiles">
            <summary>
            Uploads multiple files.
            </summary>
            <returns>Task{IActionResult}.</returns>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.GetResizedImage(System.Int64,System.String)">
            <summary>
            Get Original image or resized image or throw exception.
            </summary>
            <param name="id">The id.</param>
            <param name="imgSize">The imgSize.</param>
            <returns>Task{IActionResult}.</returns>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.ResizeImage(System.Int64,System.String)">
            <summary>
            Validates and resize image.
            </summary>
            <param name="id">The id.</param>
            <param name="imgSize">The imgSize.</param>
            <returns>Task{bool}.</returns>
        </member>
        <member name="M:QASupporter.Api.Controllers.FileController.DeploymentCheck(System.String)">
            <summary>
            The deployment check.
            </summary>
            <param name="input">The input.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:QASupporter.Api.Controllers.SettingController">
            <summary>
            Setting Controller.
            </summary>
        </member>
        <member name="M:QASupporter.Api.Controllers.SettingController.#ctor(QASupporter.Application.Configuration.Interfaces.ISettingAppService)">
            <summary>
            The SettingController.
            </summary>
            <param name="settingAppService">The settingAppService.</param>
        </member>
        <member name="M:QASupporter.Api.Controllers.SettingController.GetSettingAsync(System.Int32)">
            <summary>
            Gets setting by id.
            </summary>
            <param name="id">The id.</param>
            <returns>Task{SettingDto}.</returns>
        </member>
        <member name="M:QASupporter.Api.Controllers.SettingController.GetSettingValueAsync(System.String)">
            <summary>
            Gets setting value by name.
            </summary>
            <param name="name">The name.</param>
            <returns>Task{string}.</returns>
        </member>
        <member name="T:QASupporter.Api.DisableFormValueModelBindingAttribute">
            <summary>
            The DisableFormValueModelBindingAttribute.
            </summary>
        </member>
        <member name="M:QASupporter.Api.DisableFormValueModelBindingAttribute.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <summary>
            The OnResourceExecuting.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:QASupporter.Api.DisableFormValueModelBindingAttribute.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <summary>
            The OnResourceExecuted.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:QASupporter.Api.Startup">
            <summary>
            The Startup class.
            This project is built based on Clean Architecture https://github.com/ardalis/CleanArchitecture.
            And based on DDD: https://fildev.net/category/design-pattern/domain-driven-design/
            Document: https://github.com/dotnet-architecture/eShopOnWeb
            </summary>
        </member>
        <member name="M:QASupporter.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            The Startup constructor.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="environment">The environment.</param>
        </member>
        <member name="M:QASupporter.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:QASupporter.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The app builder.</param>
            <param name="env">The host environment.</param>
            <param name="serviceScopeFactory">The serviceScopeFactory.</param>
        </member>
    </members>
</doc>
